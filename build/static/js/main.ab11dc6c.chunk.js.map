{"version":3,"sources":["reducers/clientsReducer.js","reducers/servicesReducer.js","components/CategoryIcon.js","actions/actionCreators.js","components/Service.js","components/ServicesList.js","components/Client.js","components/ClientTotal.js","components/ClientServices.js","components/ClientList.js","components/PaymentModal.js","components/AddClient.js","components/CompanyTotal.js","components/App.js","serviceWorker.js","index.js"],"names":["initialState","clients","id","Math","floor","random","name","registeredAt","Date","now","billPaid","services","price","category","clientServiceId","isPaymentModalOpen","clientForPayment","clientsReducer","createReducer","ADD_CLIENT","state","action","newClient","payload","clientName","push","REMOVE_CLIENT","_","remove","clientId","MARK_CLIENT_SERVICES_STATUS_AS_PAID","clientIndex","findIndex","client","OPEN_PAYMENT_MODAL","CLOSE_PAYMENT_MODAL","DROP_SERVICE","service","REMOVE_CLIENT_SERVICE","servicesSample","serviceNameFilter","serviceCategoryFilter","servicesResult","servicesReducer","FILTER_SERVICE","nextServiceNameFilter","nextServiceCategoryFilter","filteredServices","filter","toLowerCase","match","isEmpty","CategoryIcon","React","Component","categoryIcon","render","className","style","marginTop","this","props","aria-hidden","serviceSpec","beginDrag","endDrag","monitor","didDrop","getDropResult","actionDropService","Service","connectDragSource","width","dragSource","DragSource","connect","connectDragPreview","dragPreview","isDragging","draggedService","dispatch","actionDragService","type","ServicesList","onCategoryClick","currentServiceNameFilter","actionFilterService","handleInputChange","event","currentServiceCategoryFilter","value","target","placeholder","onChange","onClick","Object","keys","map","key","href","servicesState","Client","trim","format","ClientTotal","total","clientServicesSpec","drop","ClientServices","removeClientService","actionRemoveClientService","removeClient","window","confirm","actionRemoveClient","openPaymentModal","actionOpenPaymentModal","connectDropTarget","clientServices","reduxConnectedClientServices","DropTarget","dropTarget","hovered","isOver","ClientList","Fragment","store","clientsState","PaymentModal","closePaymentModal","actionClosePaymentModal","markClientServicesStatusAsPaid","actionMarkClientServicesStatusAsPaid","aria-label","AddClient","addClient","actionAddClient","input","ref","node","clientInput","length","CompanyTotal","clientsBillPaid","clientsBillNotPaid","totalReceived","forEach","reduce","sum","totalOpen","rootReducer","combineReducers","configureStore","reducer","App","DndProvider","backend","HTML5Backend","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab11dc6c.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n  clients: [\r\n    { id: Math.floor(Math.random() * 100), name: 'Marta', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Corte Feminino Curto', price: 35, category: 'hair', clientServiceId: Date.now() } } },\r\n    { id: Math.floor(Math.random() * 100), name: 'João', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Corte Feminino Curto', price: 26, category: 'hair', clientServiceId: Date.now() }, [Math.floor(Math.random() * 100)]: { name: 'Limpeza Facial Básica', price: 55, category: 'facial', clientServiceId: Date.now() } } },\r\n    { id: Math.floor(Math.random() * 100), name: 'Patrícia', registeredAt: Date.now(), billPaid: false, services: { [Math.floor(Math.random() * 100)]: { name: 'Pedicure', price: 35, category: 'nails', clientServiceId: Date.now() } } },\r\n  ],\r\n  isPaymentModalOpen: false,\r\n  clientForPayment: null\r\n}\r\n\r\n// NOTE: createReducer uses Immer to let you write reducers as if they \r\n// were mutating the state directly. In reality, the reducer receives \r\n// a proxy state that translates all mutations into equivalent copy operations.\r\n\r\nexport const clientsReducer = createReducer(initialState, {\r\n  ADD_CLIENT: (state, action) => {\r\n    const newClient = { id: Date.now(), name: action.payload.clientName, services: [], registeredAt: Date.now(), billPaid: false }\r\n\r\n    state.clients.push(newClient)\r\n  },\r\n\r\n  REMOVE_CLIENT: (state, action) => {\r\n    _.remove(state.clients, { id: action.payload.clientId })\r\n  },\r\n\r\n  MARK_CLIENT_SERVICES_STATUS_AS_PAID: (state, action) => {\r\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\r\n    const client = state.clients[clientIndex]\r\n\r\n    client.billPaid = true  \r\n    state.isPaymentModalOpen = false\r\n  },\r\n\r\n  OPEN_PAYMENT_MODAL: (state, action) => {\r\n    state.isPaymentModalOpen = true\r\n    state.clientForPayment = { ...action.payload.client }\r\n  },\r\n\r\n  CLOSE_PAYMENT_MODAL: (state) => {\r\n    state.isPaymentModalOpen = false\r\n  },\r\n\r\n  DROP_SERVICE: (state, action) => {\r\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\r\n    const client = state.clients[clientIndex]\r\n\r\n    client.services[Math.floor(Math.random() * 100)] = { ...action.payload.service, clientServiceId: Date.now() }\r\n  },\r\n\r\n  REMOVE_CLIENT_SERVICE: (state, action) => {\r\n    const clientIndex = state.clients.findIndex(client => client.id === action.payload.clientId);\r\n    const client = state.clients[clientIndex]\r\n    \r\n    delete client.services[action.payload.clientServiceId]\r\n  }\r\n})\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport _ from 'lodash';\r\n\r\nconst servicesSample = {\r\n  [Math.floor(Math.random() * 100)]: { name: 'Limpeza Facial', price: 75, category: 'facial' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Clareamento Facial', price: 55, category: 'facial' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Tratamento De  Acne', price: 95, category: 'facial' },\r\n\r\n  [Math.floor(Math.random() * 100)]: { name: 'Corte Feminino Curto', price: 35, category: 'hair' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Corte Feminino Longo', price: 39, category: 'hair' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Corte Infantil Curto', price: 20, category: 'hair' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Coloração Permanente', price: 68, category: 'hair' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Corte Masculino Curto', price: 26, category: 'hair' },\r\n\r\n  [Math.floor(Math.random() * 100)]: { name: 'Manicure', price: 20, category: 'nails' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Pedicure', price: 30, category: 'nails' },\r\n\r\n  [Math.floor(Math.random() * 100)]: { name: 'Tintura De Cabelo', price: 20, category: 'products' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Tintura De Cabelo PREMIUM', price: 40, category: 'products' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Óleo de Argan 100ml', price: 25, category: 'products' },\r\n\r\n  [Math.floor(Math.random() * 100)]: { name: 'Carolina Herrera Parfum', price: 100, category: 'others' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Chocolate', price: 3, category: 'others' },\r\n  [Math.floor(Math.random() * 100)]: { name: 'Coke', price: 5, category: 'others' }\r\n}\r\n\r\nconst initialState = {\r\n  services: servicesSample,\r\n  serviceNameFilter: '',\r\n  serviceCategoryFilter: '',\r\n  servicesResult: servicesSample\r\n}\r\n\r\n// NOTE: createReducer uses Immer to let you write reducers as if they \r\n// were mutating the state directly. In reality, the reducer receives \r\n// a proxy state that translates all mutations into equivalent copy operations.\r\n\r\nexport const servicesReducer = createReducer(initialState, {\r\n  FILTER_SERVICE: (state, action) => {\r\n    const nextServiceNameFilter = action.payload.serviceNameFilter || ''\r\n    const nextServiceCategoryFilter = action.payload.serviceCategoryFilter || ''\r\n\r\n    state.serviceNameFilter = nextServiceNameFilter\r\n    state.serviceCategoryFilter = nextServiceCategoryFilter\r\n\r\n    const filteredServices = _.filter(state.services, function (service) { \r\n      return service.name.toLowerCase().match(nextServiceNameFilter.toLowerCase()) && \r\n        service.category === (_.isEmpty(nextServiceCategoryFilter) ? service.category : nextServiceCategoryFilter)\r\n    });\r\n    \r\n    state.servicesResult = filteredServices\r\n  },\r\n\r\n})","import React from 'react';\r\n\r\nclass CategoryIcon extends React.Component {\r\n  categoryIcon = (category) => {\r\n    switch (category) {\r\n      case 'Face':\r\n        return 'fa-theater-masks';\r\n      case 'Cabelo':\r\n        return 'fa-cut';\r\n      case 'Unhas':\r\n        return 'fa-hand-scissors';\r\n      case 'Produtos':\r\n        return 'fa-burn'\r\n      default:\r\n        return 'fa-shopping-cart'\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <span className=\"panel-icon has-text-danger\" style={{ marginTop: '5px' }}>\r\n        <i className={\"fas \" + this.categoryIcon(this.props.category)} aria-hidden=\"true\"></i>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryIcon;\r\n","export const ADD_CLIENT = 'ADD_CLIENT'\r\nexport const REMOVE_CLIENT = 'REMOVE_CLIENT'\r\nexport const ADD_CLIENT_ERROR = 'ADD_CLIENT_ERROR'\r\nexport const REMOVE_CLIENT_SERVICE = 'REMOVE_CLIENT_SERVICE'\r\nexport const MARK_CLIENT_SERVICES_STATUS_AS_PAID = 'MARK_CLIENT_SERVICES_STATUS_AS_PAID'\r\n\r\nexport const OPEN_PAYMENT_MODAL = 'OPEN_PAYMENT_MODAL'\r\nexport const CLOSE_PAYMENT_MODAL = 'CLOSE_PAYMENT_MODAL'\r\n\r\nexport const DRAG_SERVICE = 'DRAG_SERVICE'\r\nexport const DROP_SERVICE = 'DROP_SERVICE'\r\nexport const FILTER_SERVICE = 'FILTER_SERVICE'\r\n\r\nexport const actionAddClient = (clientName) => {\r\n  if (clientName.length > 0) {\r\n    return { type: ADD_CLIENT, payload: { clientName } }\r\n  } else {\r\n    return { type: ADD_CLIENT_ERROR }\r\n  }\r\n}\r\n\r\nexport const actionRemoveClient = (clientId) => {\r\n  return { type: REMOVE_CLIENT, payload: { clientId } }\r\n}\r\n\r\nexport const actionRemoveClientService = (clientId, clientServiceId) => {\r\n  return { type: REMOVE_CLIENT_SERVICE, payload: { clientId, clientServiceId } }\r\n}\r\n\r\nexport const actionMarkClientServicesStatusAsPaid = (clientId) => {\r\n  return { type: MARK_CLIENT_SERVICES_STATUS_AS_PAID, payload: { clientId } }\r\n}\r\n\r\nexport const actionOpenPaymentModal = (client) => {\r\n  return { type: OPEN_PAYMENT_MODAL, payload: { client } }\r\n}\r\n\r\nexport const actionClosePaymentModal = () => {\r\n  return { type: CLOSE_PAYMENT_MODAL }\r\n}\r\n\r\nexport const actionDragService = (service) => {\r\n  return { type: DRAG_SERVICE, payload: { service } }\r\n}\r\n\r\nexport const actionDropService = (service, clientId) => {\r\n  return { type: DROP_SERVICE, payload: { service, clientId } }\r\n}\r\n\r\nexport const actionFilterService = (serviceNameFilter, serviceCategoryFilter) => {\r\n  return { type: FILTER_SERVICE, payload: { serviceNameFilter, serviceCategoryFilter } } }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { DragSource } from 'react-dnd'\r\nimport CategoryIcon from './CategoryIcon'\r\nimport { actionDragService, actionDropService } from '../actions/actionCreators'\r\n\r\nconst serviceSpec = {\r\n  beginDrag (props) {\r\n    return props.service\r\n  },\r\n  \r\n  endDrag (props, monitor) {\r\n    if (!monitor.didDrop()) {\r\n      return\r\n    }\r\n    \r\n    // monitor.getDropResult() returns an object containing the clientId\r\n    // so we know for which client this service should be added\r\n    const { clientId } = monitor.getDropResult()\r\n\r\n    props.actionDropService(props.service, clientId)\r\n  }\r\n}\r\n\r\nfunction collect (connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n  }\r\n}\r\n\r\nclass Service extends React.Component {\r\n  render () {\r\n    const { connectDragSource, service } = this.props\r\n    \r\n    return connectDragSource(\r\n      <div style={{width: '100%'}}>\r\n        <CategoryIcon category={service.category}/>\r\n        {service.name} (${service.price})\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nService.propTypes = {\r\n  service: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    category: PropTypes.string,\r\n    price: PropTypes.number\r\n  }),\r\n  connectDragSource: PropTypes.instanceOf(Function)\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actionDragService: (service) => {\r\n    dispatch(actionDragService(service))\r\n  },\r\n  actionDropService: (service, clientId) => {\r\n    dispatch(actionDropService(service, clientId))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  draggedService: state.draggedService\r\n})\r\n\r\nconst dragSource = DragSource('service', serviceSpec, collect)(Service)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(dragSource)\r\n","import React from 'react';\r\nimport Service from './Service'\r\nimport { actionFilterService } from '../actions/actionCreators'\r\nimport { connect } from 'react-redux';\r\n\r\nclass ServicesList extends React.Component {\r\n  onCategoryClick = (category) => {\r\n    const currentServiceNameFilter = this.props.serviceNameFilter\r\n\r\n    this.props.actionFilterService(currentServiceNameFilter, category);\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const currentServiceCategoryFilter = this.props.serviceCategoryFilter\r\n    const target = event.target;\r\n    const value = target.value;\r\n\r\n    this.props.actionFilterService(value, currentServiceCategoryFilter);\r\n  }\r\n\r\n  render (){\r\n    const servicesResult = this.props.servicesResult\r\n    \r\n    return (\r\n      <nav className=\"services-list\">\r\n        <p className=\"panel-heading\">\r\n          Serviços\r\n        </p>\r\n        <div className=\"panel-block\">\r\n          <p className=\"control has-icons-left\">\r\n            <input className=\"input is-small is-danger\" type=\"text\" placeholder=\"Busca...\" onChange={this.handleInputChange} />\r\n            <span className=\"icon is-small is-left\">\r\n              <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div className=\"panel-tabs\">\r\n          <div className={`${this.props.serviceCategoryFilter === '' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('')}>Todos</div>\r\n          <div className={`${this.props.serviceCategoryFilter === 'Face' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('Face')}>Face</div>\r\n          <div className={`${this.props.serviceCategoryFilter === 'Cabelo' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('Cabelo')}>Cabelo</div>\r\n          <div className={`${this.props.serviceCategoryFilter === 'Unhas' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('Unhas')}>Unhas</div>\r\n          <div className={`${this.props.serviceCategoryFilter === 'Produtos' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('Produtos')}>Produtos</div>\r\n          <div className={`${this.props.serviceCategoryFilter === 'Outros' ? 'is-active' : 'has-text-danger'}`} onClick={() => this.onCategoryClick('Outros')}>Outros</div>\r\n        </div>\r\n        {\r\n          Object.keys(servicesResult).map(key => (\r\n            <div href=\"#\" className=\"panel-block is-active\" key={key}>\r\n              <Service service={servicesResult[key]} key={servicesResult[key].name} />\r\n            </div>\r\n          ))\r\n        }\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actionFilterService: (serviceNameFilter, serviceCategoryFilter) => { dispatch(actionFilterService(serviceNameFilter, serviceCategoryFilter)) }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  servicesResult: state.servicesState.servicesResult,\r\n  serviceNameFilter: state.servicesState.serviceNameFilter,\r\n  serviceCategoryFilter: state.servicesState.serviceCategoryFilter\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ServicesList);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment';\r\n\r\nclass Client extends React.Component {\r\n  render () {\r\n    const client = this.props.client\r\n\r\n    return (\r\n      <div className=\"client\" >\r\n        <p>\r\n          <strong>{client.name}</strong> <small>@{client.name.trim().toLowerCase()}</small>\r\n          <br/>\r\n          <small>\r\n            <Moment format=\"H:mm:ss\">{client.registeredAt}</Moment>\r\n          </small>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nClient.propTypes = {\r\n  client: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    registeredAt: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default Client\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ClientTotal extends React.Component {\r\n  render () {\r\n    let total = 0\r\n    const services = this.props.services\r\n\r\n    Object.keys(services).map(key => (\r\n      total = total + services[key].price\r\n    ))\r\n\r\n    return (\r\n      <div>\r\n        <b>\r\n          ${total}\r\n        </b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nClientTotal.propTypes = {\r\n  services: PropTypes.object\r\n}\r\n\r\nexport default ClientTotal\r\n","import React from 'react'\r\nimport Client from './Client'\r\nimport Service from './Service'\r\nimport ClientTotal from './ClientTotal'\r\nimport { DropTarget } from 'react-dnd'\r\nimport { connect } from 'react-redux'\r\n\r\nimport {\r\n  actionRemoveClientService,\r\n  actionRemoveClient,\r\n  actionOpenPaymentModal,\r\n} from '../actions/actionCreators'\r\n\r\nconst clientServicesSpec = {\r\n  drop(props) {\r\n    // Returns the object to be used in endDrag(props, monitor) on Service.js\r\n    // This object will be available on monitor.getDropResult() inside endDrag(props, monitor)\r\n    // and will contain the clientId value\r\n    return props\r\n  }\r\n}\r\n\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDropTarget: connect.dropTarget(),\r\n    hovered: monitor.isOver()\r\n  }\r\n}\r\n\r\nclass ClientServices extends React.Component {\r\n  removeClientService = (clientId, clientServiceId) => {\r\n    this.props.actionRemoveClientService(clientId, clientServiceId);\r\n  }\r\n\r\n  removeClient = (clientId) => {\r\n    const confirmed = window.confirm(\"Are you sure?\")\r\n\r\n    if (confirmed) {\r\n      this.props.actionRemoveClient(clientId)\r\n    }\r\n  }\r\n\r\n  openPaymentModal = () => {\r\n    this.props.actionOpenPaymentModal(this.props.client)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { connectDropTarget } = this.props\r\n    const clientServices = this.props.client.services\r\n\r\n    return connectDropTarget(\r\n      <div className=\"box\">\r\n        <article className=\"media\">\r\n          <div className=\"media-content\">\r\n            <div className=\"content\">\r\n              <Client client={this.props.client} />\r\n              <br />\r\n              <span className=\"has-text-weight-bold\">\r\n                Serviços:\r\n              </span>\r\n              <nav style={{marginTop: '3px'}}>\r\n                {\r\n                  Object.keys(clientServices).map(key => (\r\n                    <div className=\"panel-block is-active\" key={key}>\r\n                      <Service service={clientServices[key]} />\r\n                      <p className=\"delete\" onClick={() => this.removeClientService(this.props.clientId, key)}></p>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </nav>\r\n\r\n            </div>\r\n            <nav className=\"level is-mobile\">\r\n              <div className=\"level-left\">\r\n                <p className=\"buttons\">\r\n                  <button className=\"button is-danger is-small\" onClick={() => this.removeClient(this.props.clientId)}>\r\n                    <span className=\"icon is-small\">\r\n                      <i className=\"fas fa-ban\"></i>\r\n                    </span>\r\n                    <span>Remover</span>\r\n                  </button>\r\n\r\n                  <button className=\"button is-primary is-small\" onClick={() => this.openPaymentModal()}>\r\n                    <span className=\"icon is-small\">\r\n                      <i className=\"fas fa-dollar-sign\"></i>\r\n                    </span>\r\n                    <span>Fechar Comanda</span>\r\n                  </button>\r\n                </p>\r\n              </div>\r\n              <div className=\"level-right\">\r\n                <ClientTotal services={this.props.client.services} />\r\n              </div>\r\n            </nav>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actionRemoveClientService: (clientId, clientServiceId) => { dispatch(actionRemoveClientService(clientId, clientServiceId)) },\r\n  actionRemoveClient: (clientId) => { dispatch(actionRemoveClient(clientId)) },\r\n  actionOpenPaymentModal: (client) => { dispatch(actionOpenPaymentModal(client)) },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n})\r\n\r\nconst reduxConnectedClientServices = connect(mapStateToProps, mapDispatchToProps)(ClientServices)\r\nexport default DropTarget('service', clientServicesSpec, collect)(reduxConnectedClientServices)\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ClientServices from './ClientServices';\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nclass ClientList extends React.Component {\r\n  render () {\r\n    const clients = _.filter(this.props.clients, { billPaid: false })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          clients.map(client => (\r\n            <ClientServices client={client} clientId={client.id} key={client.id} />\r\n          ))\r\n        }\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nClientList.propTypes = {\r\n  clients: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clients: store.clientsState.clients,\r\n})\r\n\r\nexport default connect(mapStateToProps)(ClientList)\r\n","import React from 'react'\r\nimport ClientTotal from './ClientTotal'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { actionClosePaymentModal, actionMarkClientServicesStatusAsPaid } from '../actions/actionCreators'\r\n\r\nclass PaymentModal extends React.Component {\r\n\r\n  closePaymentModal = () => {\r\n    this.props.actionClosePaymentModal()\r\n  }\r\n\r\n  markClientServicesStatusAsPaid = (clientId) => {\r\n    this.props.actionMarkClientServicesStatusAsPaid(clientId)\r\n  }\r\n\r\n  render() {\r\n    const clientForPayment = this.props.clientForPayment\r\n    const clientId = clientForPayment && clientForPayment.id\r\n    const clientServices = clientForPayment ? clientForPayment.services : []\r\n    const isPaymentModalOpen = this.props.isPaymentModalOpen\r\n\r\n    return (\r\n      isPaymentModalOpen && (\r\n        <div className=\"modal is-active\">\r\n          <div className=\"modal-background\"></div>\r\n          <div className=\"modal-card\">\r\n            <header className=\"modal-card-head\">\r\n              <p className=\"modal-card-title\">\r\n                Cashier\r\n              </p>\r\n              <button className=\"delete\" aria-label=\"close\" onClick={() => this.closePaymentModal()}></button>\r\n            </header>\r\n            <section className=\"modal-card-body\">\r\n              <div className=\"tile is-ancestor\">\r\n                <div className=\"tile is-vertical is-8\">\r\n                  <div className=\"tile\">\r\n                    <div className=\"tile is-parent is-vertical\">\r\n                      <article className=\"tile is-child notification is-dark\">\r\n                        <p className=\"title is-size-4\">{clientForPayment.name}</p>\r\n                        <p className=\"subtitle is-size-6\">@{clientForPayment.name.trim().toLowerCase()}</p>\r\n                      </article>\r\n                      <article className=\"tile is-child notification \">\r\n                        <p className=\"title is-size-6\">Services:</p>\r\n                        <ul>\r\n                          {\r\n                            Object.keys(clientServices).map(key => (\r\n                              <li key={key}>• {clientServices[key].name} (${clientServices[key].price})</li>\r\n                            ))\r\n                          }\r\n                        </ul>\r\n                      </article>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"tile is-parent\">\r\n                  <article className=\"tile is-child notification is-danger\">\r\n                    <div className=\"title is-size-2\">\r\n                      <ClientTotal services={clientForPayment.services} />\r\n                    </div>\r\n                    <p className=\"subtitle is-size-4\">\r\n                      Total\r\n                    </p>\r\n                  </article>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <footer className=\"modal-card-foot\">\r\n              <button className=\"button is-primary\" onClick={() => this.markClientServicesStatusAsPaid(clientId)}>Mark as paid</button>\r\n              <button className=\"button\" onClick={() => this.closePaymentModal()}>Cancel</button>\r\n            </footer>\r\n          </div>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actionClosePaymentModal: () => { dispatch(actionClosePaymentModal()) },\r\n  actionMarkClientServicesStatusAsPaid: (clientId) => { dispatch(actionMarkClientServicesStatusAsPaid(clientId))}\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  isPaymentModalOpen: state.clientsState.isPaymentModalOpen,\r\n  clientForPayment: state.clientsState.clientForPayment\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentModal);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actionAddClient } from '../actions/actionCreators'\r\n\r\nclass AddClient extends React.Component {\r\n  addClient = () => {\r\n    this.props.actionAddClient(this.input.value.trim());\r\n    this.input.value = '';\r\n  }\r\n\r\n  render (){\r\n    return (\r\n      <div className=\"tile is-ancestor add-client\">\r\n        <div className=\"tile is-vertical\">\r\n          <div className=\"tile\">\r\n            <div className=\"tile is-parent is-vertical\">\r\n              <article className=\"tile is-child notification is-light is-bold\">\r\n                <div className=\"field\">\r\n                  <div className=\"control\">\r\n                    <input className=\"input is-danger\" type=\"text\" name=\"client-name\"\r\n                           placeholder=\"Digite o nome do Cliente\"\r\n                           ref={node => {this.input = node;}}/>\r\n                  </div>\r\n                </div>\r\n                <button className=\"button is-danger\" onClick={this.addClient}>\r\n                  <span className=\"icon is-small\">\r\n                    <i className=\"fas fa-plus\"></i>\r\n                  </span>\r\n                  <span>Novo Cliente</span>\r\n                </button>\r\n              </article>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  actionAddClient: (clientName) => { dispatch(actionAddClient(clientName)) }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  clientInput: state.clientInput\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddClient);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\n\r\nclass CompanyTotal extends React.Component {\r\n  render () {\r\n    const clientsBillPaid = _.filter(this.props.clients, { billPaid: true })\r\n    const clientsBillNotPaid = _.filter(this.props.clients, { billPaid: false })\r\n\r\n    let totalReceived = 0;\r\n    \r\n    clientsBillPaid.forEach(function (client) {\r\n      totalReceived += _.reduce(client.services, function (sum, service) {\r\n        return sum + (service ? service.price : 0);\r\n      }, 0);\r\n    })\r\n\r\n    let totalOpen = 0\r\n\r\n    clientsBillNotPaid.forEach(function (client) {\r\n      totalOpen += _.reduce(client.services, function (sum, service) {\r\n        return sum + (service ? service.price : 0);\r\n      }, 0);\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"level\">\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">Total Em Aberto</p>\r\n              <p className=\"title has-text-danger\">${totalOpen}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-item has-text-centered\">\r\n            <div>\r\n              <p className=\"heading\">Total Recebido</p>\r\n                <p className=\"title has-text-primary\">${totalReceived}</p>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCompanyTotal.propTypes = {\r\n  clients: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n  clients: store.clientsState.clients,\r\n})\r\n\r\nexport default connect(mapStateToProps)(CompanyTotal)\r\n","import React, { Component } from 'react'\r\nimport { combineReducers } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { DndProvider } from 'react-dnd'\r\nimport HTML5Backend from 'react-dnd-html5-backend'\r\nimport { clientsReducer } from '../reducers/clientsReducer'\r\nimport { servicesReducer } from '../reducers/servicesReducer'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport ServicesList from './ServicesList'\r\nimport ClientList from './ClientList'\r\nimport PaymentModal from './PaymentModal'\r\nimport AddClient from './AddClient'\r\nimport CompanyTotal from './CompanyTotal'\r\n\r\nimport '../css/App.css'\r\n\r\nconst rootReducer = combineReducers({\r\n  clientsState: clientsReducer,\r\n  servicesState: servicesReducer\r\n})\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"hero is-dark is-bold header-hero\">\r\n          <div className=\"hero-body\">\r\n            <div className=\"columns\">\r\n              <div className=\"column is-four-fifths\">\r\n                <h1 className=\"title\">\r\n                  Salão De Beleza\r\n                </h1>\r\n                <h2 className=\"subtitle has-text-danger\">\r\n                  <small>\r\n                    Feito com React & Redux\r\n                  </small>\r\n                </h2>\r\n              </div>\r\n              <div className=\"column is-one-fifth\">\r\n                <CompanyTotal />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"app-container\">\r\n          <DndProvider backend={HTML5Backend}>\r\n            <AddClient />\r\n            <ClientList />\r\n            <ServicesList />\r\n            <PaymentModal />\r\n          </DndProvider>\r\n        </div>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './css/index.css'\r\nimport App from './components/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}